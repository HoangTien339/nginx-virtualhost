version: '3.4'

services:
  workspace:
    build:
      context: .
      dockerfile: ./.docker/web/Dockerfile
    restart: always
    tty: true
    volumes:
      - app:/var/www/app
      - sock:/sock
      - ./.docker/web/www.conf:/etc/php/7.2/fpm/pool.d/www.conf
    links:
      - mysql
      - nginx:example.virtualhost

  nginx:
    build:
      context: ./.docker/nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    tty: true
    volumes:
      - app:/var/www/app
      - ./.docker/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/conf.d/example.virtualhost.conf:/etc/nginx/conf.d/example.virtualhost.conf
      - ./.docker/nginx/certs:/etc/nginx/certs
      - ./.docker/web/wait-for-it.sh:/scripts/wait-for-it.sh
      - sock:/sock
    command: [/bin/bash, .docker/nginx/command.sh]
    entrypoint:
      - .docker/nginx/entrypoint.sh
    working_dir: /var/www/app

  mysql:
    restart: always
    image: mysql:5.7
    volumes:
      - db:/var/lib/mysql
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: example
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: root

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080

  redis:
    restart: always
    image: redis:latest
    expose:
      - "6379"
    volumes:
      - redis:/data

volumes:
  db:
    driver: local
    name: db-example
  app:
    driver: local
    name: app
  sock:
    driver: local
    name: unix-socket
  redis:
    driver: local
    name: redis-example
